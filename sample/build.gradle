apply from: '../config/android/application.gradle'
apply from: '../config/quality/gitleaks/build.gradle'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
  def property = { key ->
    return System.getenv(key) ?: (project.hasProperty(key) ? project."$key" : "")
  }

  compileSdkVersion 33

  defaultConfig {
    applicationId "com.rakuten.tech.mobile.sdkutils.sample"
    versionCode 1
    versionName "1.0"
    minSdkVersion 23
    targetSdkVersion 33
  }

  sourceSets.each {
    it.java.srcDirs += "src/$it.name/kotlin"
  }

  dataBinding {
    enabled = true
  }

  kotlinOptions {
    jvmTarget = JavaVersion.toVersion(CONFIG.versions.java).toString()
  }

  applicationVariants.all { variant ->
    variant.outputs.all { output ->
      outputFileName = "sdk-utils-sample-${variant.name}.apk"
    }
  }

  signingConfigs {
    release {
      storeFile file('../sdk-utils-sample-releasekey.keystore')
      storePassword property("SAMPLE_APP_RELEASE_PASSWORD")
      keyAlias property("SAMPLE_APP_RELEASE_ALIAS")
      keyPassword property("SAMPLE_APP_RELEASE_PASSWORD")
    }
  }

  buildTypes {
    release {
      minifyEnabled true
      debuggable false
      signingConfig signingConfigs.release
    }
  }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$CONFIG.versions.kotlin"
  implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta3'
  implementation "com.squareup.okhttp3:okhttp:$CONFIG.versions.okhttp"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2"
  implementation 'com.google.code.gson:gson:2.8.9'
  implementation 'com.rakuten.tech.mobile.rmc:rmc-inappmessaging:1.0.0' // used for `rmcSdks` EventLogger field
  implementation project(':sdk-utils')
}

apply from: "../config/quality/detekt/android.gradle"
dependencies {
  // Enable the KtLint rules
  detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.20.0"
}

detekt {
  config = rootProject.files('detekt-config.yml')
}
