format_version: 11
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: android
trigger_map:
- push_branch: "master"
  workflow: build-and-test
- pull_request_source_branch: "*"
  workflow: build-and-test
- tag: "v*.*.*"
  workflow: release
workflows:
  build-and-test:
    before_run:
    - _setup-env
    after_run:
    - _run-sonarqube-scanner
    steps:
    - cache-pull@2: {}
    - script@1:
        title: Dependency Check
        inputs:
        - content: ./gradlew dependencyCheckAggregate
    - script@1:
        title: Run Check
        inputs:
        - content: ./gradlew check
    - script@1:
        title: Danger
        inputs:
        - content: |-
            bundle install
            bundle exec danger --dangerfile=config/danger/Dangerfile
    - script@1:
        title: Assemble
        inputs:
        - content: ./gradlew assemble
    - script@1:
        title: Current Version
        inputs:
        - content: ./gradlew currentVersion
    - custom-test-results-export@0:
        inputs:
        - test_name: "${SDK_PATH}_debug"
        - base_path: "$SDK_PATH/build/test-results/testDebugUnitTest/"
        - search_pattern: "*"
    - custom-test-results-export@0:
        inputs:
        - test_name: "${SDK_PATH}_release"
        - base_path: "$SDK_PATH/build/test-results/testReleaseUnitTest/"
        - search_pattern: "*"
    - deploy-to-bitrise-io@2: {}
    - cache-push@2:
        inputs:
        - cache_paths: |-
            $HOME/.gradle
            ./.gradle
            $HOME/.m2
        - ignore_check_on_paths: |-
            $HOME/.gradle/caches/*.lock
            ./.gradle/*.lock
            ./.gradle/*.bin
  release:
    before_run:
    - build-and-test
    steps:
    - script@1:
        title: Retrieve Base64 PGP Key and save to file
        inputs:
        - content: |-
            if [[ "$RELEASE_PGP_KEY_BASE64" != "" ]]; then
              base64 -d <<< "$RELEASE_PGP_KEY_BASE64" > ./maven-central-key.gpg
            fi
    - script@1:
        title: Publish Artifacts
        inputs:
        - content: ./gradlew publish
  _setup-env:
    steps:
    - set-java-version@1:
        inputs:
        - set_java_version: '11'
    - git-clone@6:
        inputs:
        - fetch_tags: 'yes'
        - merge_pr: 'no'
        - update_submodules: 'yes'
  _run-sonarqube-scanner:
    steps:
    - set-java-version@1:
        inputs:
        - set_java_version: '11'
    - script@1:
        title: Prepare branches to feed in sonar.gradle
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            # Destination branch
            git fetch --no-tags origin master

            # Source branch
            # For release
            echo $BITRISE_TRIGGERED_WORKFLOW_ID
            if [[ $BITRISE_TRIGGERED_WORKFLOW_ID == "release" ]]; then
                echo "This is a release step, just making sure we are at master."
                git fetch --no-tags origin master
                git switch master
            # For PRs
            else
                if [[ $BITRISEIO_PULL_REQUEST_REPOSITORY_URL != "" && \
                    $GIT_REPOSITORY_URL != $BITRISEIO_PULL_REQUEST_REPOSITORY_URL ]]; then
                    echo "This is a PR from a forked repo, will be creating temp branch with current hash:"
                    git log --pretty=format:'%h%n' -n 1
                    git switch -C $BITRISE_GIT_BRANCH
                else
                    echo "This is a PR from the repo, just making sure we are at the right branch"
                    git fetch --no-tags origin $BITRISE_GIT_BRANCH
                    git switch $BITRISE_GIT_BRANCH
                fi
            fi
    - script@1:
        run_if: '{{getenv "SONARQUBE_TOKEN" | ne ""}}'
        title: Run SonarQube Scanner
        inputs:
        - content: ./gradlew sonarqube
meta:
  bitrise.io:
    stack: linux-docker-android-20.04
    machine_type_id: elite
app:
  envs:
  - opts:
      is_expand: false
    SDK_PATH: sdk-utils